//Подсчитать количество слов, не содержащих заданный символ
#include <iostream>
#include<string.h>
using namespace std;
struct List //описание структуры
{
	char key; //поле данных
	List* pred, * next; //адресные поля
};
// построение списка символов до первой точки
List* Init()
{
	List* p, * r, * beg = NULL;
	char ch;
	cout << "INPUT LIST" << endl;
	ch = cin.get(); //ввод символа в переменную ch
	if (ch != '.')
	{
		p = new (List); //создать первый элемент
		beg = p; /*запомнить в переменную beg,
		адрес начала списка*/
		p->key = ch; //заполнить поле данных
		p->pred = 0; p->next = 0; //заполнить адресные поля
		ch = cin.get(); //ввод символа в переменную ch
		while (ch != '.') // пока не будет введена точка
		{
			r = new(List); //новый элемент
			r->key = ch; // заполнить поле данных
			p->next = r; //связать начало списка с r
			r->pred = p; //связать r с началом списка
			r->next = 0; /*обнулить последнее адресное
			поле*/
			p = r;
			ch = cin.get();
		}
	}
	return beg;
}
/*печать списка, на который указывает указатель beg*/
int print_list(List* beg) //функция возвращает количество элементов списка
{
	int n = 0;
	if (beg == 0) //если список пустой
	{
		cout << "The list is empty\n";
		return n;
	}
	List* p = beg;
	cout << "Список:\n";
	while (p) //пока не конец списка
	{
		cout << p->key;
		n++;
		p = p->next; //перейти на следующий
	}
	return n;
}

List* ins_end_List(List* beg, char c)
{
	List* p = beg;
	while (p->next) p = p->next; /*поставить указатель р на послений
	элемент списка*/
	List* r = new(List); //созать новый элемент
	r->key = c; // заполнить поле данных пробелом
	p->next = r; //связать последний элемент с новым
	r->pred = p; //связать новый элемент с последним
	r->next = 0;
	return beg;
}
bool print_word(List* beg, List* end,char s)
{
	int kol=0;
	bool flag = false;
	while (beg != end) //пока не конец вывода
	{
		kol = 0;
		flag = true;
		cout << beg->key;
		if (beg->key == s) { flag = false; break; }
		beg = beg->next; //перейти на предыдующий
	}
	cout << ' ';
	return flag;
}


void kol_List(List* beg,char sim)
{
	List* p=NULL, * begin=NULL, * end=NULL;
	int n = 0, kols = 0;
	bool ysl;
	//добавление в конец списка пробела
	p = ins_end_List(beg, ' ');
	//выделение слов
	cout << "\nСписок слов";
	while (p->next) //пока не конец списка
	{
		while (p->key == ' ') p = p->next; /*пропустить
		пробелы*/
		begin = p;
		while (p->key != ' ') p = p->next;
		end = p;
		ysl=print_word(begin, end,sim);
		if (ysl) kols++;
	}
	cout << "Количество слoв не содержащих заданный символ=" << kols;
}


int main()
{
	setlocale(LC_ALL, "RUS");
	List* beg = NULL;
	int i, k, n;
	char simvol;
	cout << "Введите символ-";
	cin >> simvol;
	beg = Init();
	n = print_list(beg);
	kol_List(beg, simvol);

}